<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[No of Rows7]]>
    </line>
  </reporter-output>
  <suite started-at="2024-03-19T12:28:46 IST" name="Default suite" finished-at="2024-03-19T12:28:55 IST" duration-ms="8560">
    <groups>
    </groups>
    <test started-at="2024-03-19T12:28:46 IST" name="Default test" finished-at="2024-03-19T12:28:55 IST" duration-ms="8560">
      <class name="driverFactory.AddEmployee">
        <test-method is-config="true" signature="setUp()[pri:0, instance:driverFactory.AddEmployee@77888435]" started-at="2024-03-19T12:28:46 IST" name="setUp" finished-at="2024-03-19T12:28:49 IST" duration-ms="2680" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="AddEmpTest()[pri:0, instance:driverFactory.AddEmployee@77888435]" started-at="2024-03-19T12:28:49 IST" name="AddEmpTest" finished-at="2024-03-19T12:28:54 IST" duration-ms="5491" status="FAIL">
          <exception class="java.io.FileNotFoundException">
            <message>
              <![CDATA[.\FileOutput\AddEmp_Data.xlsx (The process cannot access the file because it is being used by another process)]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.FileNotFoundException: .\FileOutput\AddEmp_Data.xlsx (The process cannot access the file because it is being used by another process)
at java.base/java.io.FileOutputStream.open0(Native Method)
at java.base/java.io.FileOutputStream.open(FileOutputStream.java:293)
at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:235)
at java.base/java.io.FileOutputStream.<init>(FileOutputStream.java:123)
at utilities.ExcelFileUtil.getEmpData(ExcelFileUtil.java:117)
at driverFactory.AddEmployee.AddEmpTest(AddEmployee.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.FileNotFoundException -->
          <reporter-output>
            <line>
              <![CDATA[No of Rows7]]>
            </line>
          </reporter-output>
        </test-method> <!-- AddEmpTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:driverFactory.AddEmployee@77888435]" started-at="2024-03-19T12:28:54 IST" name="tearDown" finished-at="2024-03-19T12:28:55 IST" duration-ms="310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- driverFactory.AddEmployee -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
